@model InvitesByManagerViewModel
@{
    ViewData["Title"] = "Manage Teams and Users";
    Layout = "~/Areas/Manager/Views/Shared/_Layout.cshtml";
    var voicebaording = Model.voiceboarding;
}
<link href="~/assets/css/tagify.css" rel="stylesheet" />
<div class="row clearfix">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="header clearfix pb-0">
                <button id="autoplay" class="d-none">play</button>
                <h2 class="float-left"><strong>User</strong> Email</h2>
            </div>
            <div class="body">
                <div class="row align-items-end">
                    <div class="col-md-5">
                        <form asp-action="InviteUsers" id="userInvites">

                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="invitesByManager.Email" class="control-label"></label>
                                <input asp-for="invitesByManager.Email" class="form-control py-1" />
                                <span id="error" class="text-danger d-none">This is required field.</span>
                                @*<span asp-validation-for="invitesByManager.Email" class="text-danger"></span>*@
                            </div>

                        </form>
                        @if (Model != null && Model.success == true)
                        {
                            <div class="alert alert-info">Invitation(s) sent <strong>Successfully</strong></div>
                        }
                    </div>
                    <div class="col-md-5">
                        <div class="form-group">
                            <button type="button" class="btn btn-primary m-0" id="inviteUsers">Invite</button>
                            <button type="button" class="btn btn-primary m-0 d-none tagsremoveAllBtn" id="">Remove Tags</button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@await Component.InvokeAsync("InvitedUsersByManager")

<div class="row clearfix" style="margin-top:30px;">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <button id="autoplay" class="d-none">play</button>
            <div class="header d-flex pb-0 align-items-center justify-content-between">
                <h2 class=""><strong>Users</strong> List</h2>
                <a id="btnassignuser" data-toggle="tooltip" data-placement="top" title="Manage Team" asp-area="Manager" asp-controller="User" asp-action="UnassignedUsers" class="btn btn-sm btn-primary">
                    <span class="zmdi zmdi-accounts-add"></span>
                </a>
            </div>
            <div class="body">
                <div class="body table-responsive">
                    @if (Model.teams != null && Model.teams.Count() > 0)
                    {
                        <table class="table table-hover table-striped table-borderless">
                            <thead>
                                <tr>
                                    <th>Sr.</th>
                                    <th>Name</th>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Action</th>
                                    <th>Objections</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.teams != null && Model.teams.Count() > 0)
                                {
                                    int index = 0;
                                    foreach (var user in Model.teams)
                                    {
                                        index++;
                                        <tr>
                                            <td>@index</td>
                                            <td>@user.Name</td>
                                            <td>@user.Username</td>
                                            <td><a href="mailto:@user.Email">@user.Email</a></td>
                                            <td>
                                                <a id="btnPushUnassigedObjectionsToCol" data-username="@user.Name" data-toggle="tooltip" data-placement="top" title="Assign Collection to User" asp-area="Manager" asp-controller="Dashboard" asp-action="CollectionList" asp-route-UserId="@user.Id" class="m-0 btn btn-success btn-xs">
                                                    <span class="zmdi zmdi-mail-send"></span>
                                                </a>&nbsp;

                                                @*<a id="btnpushobjectiontslistouser" data-toggle="tooltip" data-placement="top" title="Push Objections to User" asp-area="Manager" asp-controller="Dashboard" asp-action="ObjectionsList" asp-route-UserId="@user.Id" class="m-0 btn btn-info btn-xs">
                                                        <span class="zmdi zmdi-mail-send"></span>
                                                    </a>*@
                                            </td>
                                            <td>
                                                <a id="btnviewcompletedobjection" data-username="@user.Name" data-toggle="tooltip" data-placement="top" title="User Completed Objection" class="ctm-Spinner btn btn-primary btn-xs m-0 manager" asp-area="Manager" asp-controller="User" asp-action="UserCompletedObjections" asp-route-UserName="@user.Username">
                                                    <span id="spinnercompleted" class="spinner-border spinner-border-sm" hidden role="status">

                                                    </span> (@user.CompletedCount) Completed
                                                </a> |
                                                <a id="btnviewmissedobjection" data-username="@user.Name" data-toggle="tooltip" data-placement="top" title="User Missed Objection" class="ctm-Spinner btn btn-primary btn-xs m-0" asp-area="Manager" asp-controller="User" asp-action="UserMissedObjections" asp-route-UserName="@user.Username">
                                                    <span id="spinnermissed" class="spinner-border spinner-border-sm" hidden role="status">

                                                    </span> (@user.MissedCount) Missed
                                                </a>
                                            </td>


                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" align="center">No Record Found.</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="col-md-12 text-center nodatadivStyle">
                            <div class="ND_Img_Wrap">
                                <p>No Data Found</p>
                                @*<img src="~/ThemeStyles/images/NoDataImages/Users.svg" />*@
                            </div>

                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var IsMainJsExist = "";
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
            $("#txtwelcome").html("Manage Teams & Users");
        });
    </script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/assets/js/tagify.js"></script>
   
    <script src="~/lib/BootboxJs/bootbox.min.js"></script>
    <script src="~/lib/moment.js"></script>
    <script src="~/lib/notify.js"></script>
    <script src="~/lib/HoldOn.js-master/src/js/HoldOn.js"></script>
    @if (voicebaording == false)
    {
        <script src="~/assets/onboarding/js/voice-onboarding.js"></script>

    }
    <script>

        $(document).ready(function () {
            //          var btnHtml = '';
            //     btnHtml += '<button id="ppVoice" class="ppVoice btn btn-danger">Pause</button>';
            //    btnHtml += '<button id="skip" class="skip btn btn-light">Save For Later</button>';
            //            $('.ttour-footer').prepend(btnHtml);
            //            $(".ppVoice").on("click", function () {

            //                if ($(this).text() === "Play") {
            //                    $(this).text("Pause");
            //                    synth.resume();
            //                }
            //                else {
            //                    $(this).text("Play");
            //                    synth.pause();
            //                }
            //            });
            //              $(".skip").on("click", function () {
            //    var Urlpath = window.location.href;
            //    $.ajax({

            //        url: '/Speech/SaveLater/',
            //        data: { Urlpath:Urlpath, currentStep: currentStep },
            //        success: function (res) {
            //            $.notify("Successfully saved for later", 'success');
            //        }
            //    });
            //});

        });
        var input = document.getElementById('invitesByManager_Email');//document.querySelector('input[name=Invites.Email]');
        // init Tagify script on the above inputs
        console.log(input.value);
        input.value = "";
        tagify = new Tagify(input);

        $(function () {

            $(window).keydown(function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        $(".tagsremoveAllBtn").click(function () {
            tagify.removeTag(invitesByManager_Email);
        });

        $("#inviteUsers").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var frm = $("#userInvites");
            if ($("#invitesByManager_Email").val() != "") {
                $("#inviteUsers").prop("disabled", "disabled");
                $("#userInvites").submit();
            }
            else {
                $.notify("Input Field can not be null", "error");
            }
        });
        $("#invitesByManager_Email").on("focusout", function () {
            if ($("#invitesByManager_Email").val() != "") {
                $("#inviteUsers").prop("disabled", false);
            }
        });

        $("#invitesByManager_Email").on("blur", function () {
            if ($("#invitesByManager_Email").val() != "") {
                $("#inviteUsers").prop("disabled", false);
            }
        });
        var objectionNotification = [];

        $("#objectionmodal").on('hidden.bs.modal', function () {
            objectionNotification = [];
        });

        $(document).on('click', '#btnpushobjectiontouser', function (e) {
            e.preventDefault();
            if (objectionNotification.length > 0) {
                var url = $(this).attr('href');
                $.ajax({
                    url: url,
                    type: "POST",
                    data: { models: objectionNotification }
                }).done(function (res) {
                    if (res) {
                        $.notify("Objection Pushed to Selected User", "success");
                        $('#objectionmodal').modal('toggle');
                    }
                });
            }
            else {
                $.notify("Please Select Atleast 1 User", "warn");
            }
        });


        $(document).on('change', '.usertosendcollection', function () {

            var control = $(this);
            var isChecked = control.is(':checked');
            var userId = control.attr('data-userId');

            var CollectionId = control.attr('data-collectionId');
            var ManagerId = control.attr('data-managerUserId');


            $.ajax({
                url: "/Manager/User/UpdateAssignCollection",
                type: "GET",
                data: { isChecked: isChecked, userId: userId, CollectionId: CollectionId, ManagerId: ManagerId }
            }).done(function (res) {

                if (res.removed) {
                    $.notify(res.user + " " + " is removed from Collection", "success");
                }
                else {
                    $.notify("Collection is assigned to " + res.user, "success");
                }
            });
        });
        $(document).on('change', '.checkisteammember', function () {

            var control = $(this);
            var isTeamMember = control.is(':checked');
            var userId = control.attr('data-userId');

            $.ajax({
                url: "/Manager/User/UpdateTeam",
                type: "GET",
                data: { isTeamMember: isTeamMember, userId: userId }
            }).done(function (res) {

                if (res.removed) {
                    $.notify(res.user + " " + "Removed from Team", "success");
                }
                else {
                    $.notify(res.user + " " + "Added to Team", "success");
                }
            });
        });
        $(document).on('click', '#btnassignuser', function (e) {
            e.preventDefault();
            //managerUserId = $(this).attr("data-managerUserId");
            var url = $(this).attr('href');

            $.ajax({
                url: url,
                method: "GET",
                beforeSend: function () {
                    HoldOn.open({
                        theme: "sk-cube-grid"
                    });
                }
            }).done(function (res) {
                HoldOn.close();
                $("#CreateNewModal-label").html("Manage Team");
                $("#CreateNewBody").html(res);
                $("#CreateNewModal").modal();
            });
        });

        $(document).on('change', '.usertosendobjection', function () {
            var control = $(this);
            var isTeamMember = control.is(':checked');
            var userId = control.attr('data-userId');
            var objectionId = control.attr('data-objectionId');
            var managerUserId = control.attr('data-managerUserId');
            if (isTeamMember) {
                objectionNotification.push({
                    PushedByUserId: managerUserId,
                    PushedToUserId: userId,
                    ObjectionId: objectionId
                });
            }
            else {
                $.each(objectionNotification, function (i) {
                    if (objectionNotification[i].PushedByUserId === managerUserId && objectionNotification[i].PushedToUserId === userId && objectionNotification[i].ObjectionId === objectionId) {
                        objectionNotification.splice(i, 1);
                        return false;
                    }
                });
            }
        });

        $(document).on('click', '#btnpushobjectiontslistouser', function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            $.ajax({
                url: url,
                type: "GET"
            }).done(function (res) {
                $("#objectionmodal-label").html('Objections List');
                $("#objectionmodalbody").html(res);
                $("#objectionmodal").modal();
            });
        });

        $(document).on('click', '#btnviewcompletedobjection', function (e) {
            e.preventDefault();
            var control = $(this);
            userName = control.attr('data-username');
            var url = control.attr('href');
            var spinner = control.find('#spinnercompleted');
            $.ajax({
                url: url,
                beforeSend: function () {
                    spinner.prop('hidden', false);
                }
            }).done(function (res) {
                spinner.prop('hidden', true);
                $("#objectionmodal-label").html('Completed Objections by <strong>' + userName + "</strong>");
                $("#objectionmodalbody").html(res);
                $('.momentTime').each(function () {
                    var d = moment($(this).html(), "YYYYMMDDHHmmss").fromNow();
                    $(this).html(d);
                });
                $("#objectionmodal").modal();
            });
        });

        $(document).on('click', '#btnviewmissedobjection', function (e) {
            e.preventDefault();
            var control = $(this);
            userName = control.attr('data-username');
            var url = control.attr('href');
            var spinner = control.find('#spinnermissed');
            $.ajax({
                url: url,
                beforeSend: function () {
                    spinner.prop('hidden', false);
                }
            }).done(function (res) {
                spinner.prop('hidden', true);
                $("#objectionmodal-label").html('Missed Objections by <strong>' + userName + "</strong>");
                $("#objectionmodalbody").html(res);
                $('.momentTime').each(function () {
                    var d = moment($(this).html(), "YYYYMMDDHHmmss").fromNow();
                    $(this).html(d);
                });
                $("#objectionmodal").modal();
            });
        });

        $(document).on('click', '#btnPushUnassigedObjectionsToCol', function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            userName = $(this).attr('data-username');
            $.ajax({
                url: url,
                type: "GET"
            }).done(function (res) {
                $("#objectionmodal-label").html('Assign Collection(s) to <strong>' + userName + "</strong>");
                $("#objectionmodalbody").html(res);
                $("#objectionmodal").modal();
            });
        });

    </script>
}
